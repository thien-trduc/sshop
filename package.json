{
  "name": "tproject",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "start:dev_login-web": "nx serve login-web",
    "build:prod_login-web": "cross-env NODE_ENV=production npx nx build --project=login-web",
    "start:prod_login-web": "http-server -p 3268 -c-1 ./dist/login-web ",
    "start:dev_multi": "cross-env NODE_ENV=development nx run-many --target=serve --projects=backend-admin-api,payment --parallel=2",
    "start:dev_backend_api": "cross-env NODE_ENV=development nx serve backend-admin-api",
    "build:prod_backend_api": "yarn gen_prod:postgres && npx nx build --project=backend-admin-api",
    "deploy:prod_backend_api": "yarn build:prod_backend_api && cd ../tproject_build && sh ./scripts/build.sh backend-admin-api",
    "start:prod_backend_api": "yarn gen_prod:postgres && cross-env NODE_ENV=production node ./dist/backend-admin-api/main.js",
    "start:dev_event-service": "cross-env NODE_ENV=development npx nx serve --project=event-service",
    "build:dev_event-service": "npx nx build --project=event-service",
    "start:prod_event-service": "yarn gen_prod:postgres && cross-env NODE_ENV=production node ./dist/event-service/main.js",
    "build:prod_event-service": "yarn gen_prod:postgres && npx nx build --project=event-service",
    "deploy:prod_event-service": "yarn build:prod_event-service && cd ../tproject_build && sh ./scripts/build.sh event",
    "start:dev_payment": "cross-env NODE_ENV=development npx nx serve --project=payment",
    "build:prod_payment": "yarn gen_prod:postgres && npx nx build --project=payment",
    "start:prod_payment": "yarn gen_prod:postgres && cross-env NODE_ENV=production node ./dist/payment/main.js",
    "deploy:prod_payment": "yarn build:prod_payment && cd ../tproject_build && sh ./scripts/build.sh payment",
    "start:dev_webhook": "cross-env NODE_ENV=development npx nx serve --project=webhook",
    "build:prod_webhook": "yarn gen_prod:postgres && npx nx build --project=webhook",
    "start:prod_webhook": "yarn gen_prod:postgres && cross-env NODE_ENV=production node ./dist/webhook/main.js",
    "deploy:prod_webhook": "yarn build:prod_webhook && cd ../tproject_build && sh ./scripts/build.sh webhook",
    "start:dev_storage": "cross-env NODE_ENV=development npx nx serve --project=storage",
    "build:prod_storage": "yarn gen_prod:postgres && npx nx build --project=storage",
    "start:prod_storage": "yarn gen_prod:postgres && cross-env NODE_ENV=production node ./dist/storage/main.js",
    "deploy:prod_storage": "yarn build:prod_storage && cd ../tproject_build && sh ./scripts/build.sh storage",
    "start:dev_tbook-web": "nx serve tbook-web",
    "migrate:postgres": "npx prisma format --schema=./prisma/thientrd_postgres.prisma && dotenv -e config/.backend-admin-api.development.env -- npx prisma migrate dev --schema=./prisma/thientrd_postgres.prisma --name postgres-init",
    "pull:postgres": "dotenv -e config/.backend-admin-api.development.env -- npx prisma db  pull --schema=./prisma/thientrd_postgres.prisma",
    "reset:postgres": "dotenv -e config/.backend-admin-api.development.env -- npx prisma migrate reset --schema=./prisma/thientrd_postgres.prisma",
    "gen:postgres": "dotenv -e config/.backend-admin-api.development.env -- npx prisma generate --schema=./prisma/thientrd_postgres.prisma",
    "gen_prod:postgres": "dotenv -e .env -- npx prisma generate --schema=./prisma/thientrd_postgres.prisma",
    "prepare": "husky install",
    "lint": "eslint \"packages/**/*.ts\"",
    "lint:fix": "eslint --fix . --ext .ts"
  },
  "private": true,
  "dependencies": {
    "@casl/ability": "^5.4.4",
    "@casl/prisma": "^1.0.2",
    "@golevelup/nestjs-rabbitmq": "^2.2.0",
    "@nestjs/axios": "^0.0.3",
    "@nestjs/common": "^8.2.4",
    "@nestjs/config": "^1.1.5",
    "@nestjs/core": "^8.2.4",
    "@nestjs/cqrs": "^8.0.1",
    "@nestjs/event-emitter": "^1.0.0",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/microservices": "^8.2.4",
    "@nestjs/passport": "^8.0.1",
    "@nestjs/platform-express": "^8.2.4",
    "@nestjs/serve-static": "^2.2.2",
    "@nestjs/swagger": "^4.1.2",
    "@prisma/client": "3.11.1",
    "@sendgrid/mail": "^7.6.2",
    "amqplib": "^0.8.0",
    "bcrypt": "^5.0.1",
    "cache-manager": "^3.6.1",
    "cache-manager-redis-store": "^2.0.0",
    "class-transformer": "^0.2.3",
    "class-validator": "0.13.1",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "express": "^4.17.2",
    "express-basic-auth": "^1.2.0",
    "express-ip": "^1.0.4",
    "express-rate-limit": "^5.5.1",
    "firebase-admin": "^9.7.0",
    "form-data": "^3.0.0",
    "googleapis": "^104.0.0",
    "joi": "^14.3.1",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.21",
    "mime-types": "^2.1.34",
    "mkdirp": "^0.5.1",
    "moment": "^2.29.3",
    "passport": "^0.5.2",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.13",
    "request-context": "^2.0.0",
    "rxfire": "^6.0.0",
    "rxjs": "^7.4.0",
    "stripe": "^9.4.0",
    "swagger-ui-express": "^4.1.2",
    "tslib": "^2.0.0",
    "uuid": "^8.3.2",
    "dotenv": "^16.0.0",
    "dotenv-cli": "^5.1.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.1.6",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@nrwl/cli": "13.9.3",
    "@nrwl/cypress": "13.9.3",
    "@nrwl/eslint-plugin-nx": "13.9.3",
    "@nrwl/jest": "13.9.3",
    "@nrwl/js": "13.9.3",
    "@nrwl/linter": "13.9.3",
    "@nrwl/nest": "^13.9.3",
    "@nrwl/node": "13.9.3",
    "@nrwl/nx-cloud": "latest",
    "@nrwl/workspace": "13.9.3",
    "@types/amqplib": "^0.8.2",
    "@types/bcrypt": "^5.0.0",
    "@types/cache-manager": "^3.4.3",
    "@types/cache-manager-redis-store": "^2.0.1",
    "@types/compression": "^1.7.2",
    "@types/cron": "^1.7.3",
    "@types/express": "^4.17.13",
    "@types/express-rate-limit": "^5.1.3",
    "@types/faker": "^5.5.9",
    "@types/jest": "27.0.2",
    "@types/jsonwebtoken": "^8.5.6",
    "@types/lodash": "^4.14.178",
    "@types/mime-types": "^2.1.1",
    "@types/morgan": "^1.9.3",
    "@types/multer": "^1.4.7",
    "@types/node": "16.11.7",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^8.3.3",
    "@types/webpack-env": "^1.16.3",
    "@typescript-eslint/eslint-plugin": "~5.10.0",
    "@typescript-eslint/eslint-plugin-tslint": "^5.8.0",
    "@typescript-eslint/parser": "~5.10.0",
    "autoprefixer": "^10.4.7",
    "clean-webpack-plugin": "^4.0.0",
    "copyfiles": "^2.4.1",
    "cypress": "^9.1.0",
    "eslint": "~8.7.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-import-resolver-typescript": "^2.5.0",
    "eslint-plugin-cypress": "^2.10.3",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-import-helpers": "^1.2.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "eslint-plugin-sonarjs": "^0.11.0",
    "eslint-plugin-unicorn": "^39.0.0",
    "gh-pages": "^3.2.3",
    "husky": "^7.0.4",
    "jest": "27.2.3",
    "lint-staged": "~12.1.3",
    "nodemon": "^2.0.15",
    "nx": "13.9.3",
    "prettier": "^2.5.1",
    "prisma": "^3.11.1",
    "supertest": "^6.1.6",
    "ts-jest": "27.0.5",
    "ts-loader": "^9.2.6",
    "ts-node": "^10.4.0",
    "tslint": "^6.1.3",
    "typescript": "~4.5.2",
    "vuepress": "^2.0.0-beta.29",
    "webpack": "^5.64.4",
    "webpack-cli": "^4.9.1",
    "webpack-node-externals": "^3.0.0"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "git add"
    ]
  }
}
